name: Build PS1 to EXE and Release

on:
  workflow_call:
    inputs:
      name:
        description: "Name of the Zhiva app"
        required: true
        type: string
      icon:
        description: "Optional path to .ico file"
        required: false
        type: string
      release_tag:
        description: "Release tag to upload EXE (default: latest)"
        required: false
        type: string

  workflow_dispatch:
    inputs:
      name:
        description: name
        required: true
        type: string
      icon:
        description: icon
        required: false
        type: string
      release_tag:
        description: release_tag
        required: false
        type: string

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install PS2EXE
        shell: pwsh
        run: |
          Install-Module -Name PS2EXE -Scope CurrentUser -Force
          Import-Module PS2EXE

      - name: Compile
        shell: pwsh
        run: |
          $ScriptName = "${{ inputs.name }}"
          $InputFile = "$PWD\$ScriptName.ps1"

          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/wxn0brP/Zhiva-windows/refs/heads/master/install.ps1" -OutFile $InputFile
          (Get-Content $InputFile) -replace '%%name%%', $ScriptName | Set-Content $InputFile

          $OutputFile = "$PWD\$ScriptName.exe"
          $IconInput = '${{ inputs.icon }}'

          if ($IconInput -and $IconInput -ne '') {
              $IconFile = "$PWD\$IconInput"
              Invoke-PS2EXE -InputFile $InputFile -OutputFile $OutputFile -Icon $IconFile
          } else {
              Invoke-PS2EXE -InputFile $InputFile -OutputFile $OutputFile
          }

      - name: Determine release tag
        id: tag
        shell: pwsh
        run: |
          $ReleaseTag = '${{ inputs.release_tag }}'
          $GITHUB_OUTPUT = $env:GITHUB_OUTPUT

          if ($ReleaseTag -and $ReleaseTag -ne '') {
              "release_tag=$ReleaseTag" | Out-File -FilePath $GITHUB_OUTPUT -Encoding utf8
          } else {
              "release_tag=latest" | Out-File -FilePath $GITHUB_OUTPUT -Encoding utf8
          }

      - name: Upload binary to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          name: ${{ steps.tag.outputs.release_tag }}
          draft: false
          prerelease: false
          files: ${{ inputs.name }}.exe
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
